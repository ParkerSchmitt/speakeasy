name: Publish to DO



# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select environment to publish to
env:
  API_PORT: ${{ vars.API_PORT }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }} 
  ACCOUNT_TABLE_NAME: ${{ vars.ACCOUNT_TABLE_NAME }}
  TOPIC_TABLE_NAME: ${{ vars.TOPIC_TABLE_NAME }}
  CARD_ACCOUNT_LINKAGE_NAME: ${{ vars.CARD_ACCOUNT_LINKAGE_NAME }}
  CARD_TABLE_NAME: ${{ vars.CARD_TABLE_NAME }}
  CARD_REPORT_TABLE_NAME: ${{ vars.CARD_REPORT_TABLE_NAME }}
  SQL_CLIENT: ${{ vars.SQL_CLIENT }}
  SQL_HOST: ${{ vars.SQL_HOST }}
  SQL_PORT: ${{ vars.SQL_PORT }}
  SQL_USER: ${{ vars.SQL_USER }}
  SQL_PASSWORD: ${{ vars.SQL_PASSWORD }}
  SQL_DATABASE: ${{ vars.SQL_DATABASE }}
  SQL_FILENAME: ${{ vars.SQL_FILENAME }}
  MAX_CARDS: ${{ vars.MAX_CARDS }}
  CORS_ORIGIN: ${{ vars.CORS_ORIGIN }}
  CORS_CREDENTIALS: ${{ vars.CORS_ORIGIN }}
  CORS_OPTIONS_SUCCESS_STATUS: ${{ vars.CORS_OPTIONS_SUCCESS_STATUS }}
  SESSION_SECRET: ${{ vars.SESSION_SECRET }}                 
  SESSION_RESAVE: ${{ vars.SESSION_RESAVE }}
  SESSION_COOKIE_MAX_AGE: $ {{vars.SESSION_COOKIE_MAX_AGE }}
  SESSION_SAVE_UNINITALIZED: $ {{ vars.SESSION_SAVE_UNINITALIZED }}



#3
jobs:
  build_and_push:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        
      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $API_PORT):$(echo $GITHUB_SHA | head -c7) .
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

            
