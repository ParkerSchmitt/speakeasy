services:
  frontend:
    image: ${$REGISTRY}${$IMAGE_NAME}:frontend
    container_name: frontend
    build:
      context: .
      dockerfile: ./src/frontend/Dockerfile
    volumes:
        - .:/src/frontend
    ports:
        - "3000:3000"
    restart: unless-stopped
    command: serve -s build
    networks: 
      - app-network
  backend:
    image: ${$REGISTRY}${$IMAGE_NAME}:backend
    container_name: backend
    build:
      context: .
      dockerfile: ./src/backend/Dockerfile
    volumes:
        - .:/src/backend
    ports:
        - "4000:4000"
    restart: unless-stopped
    command: node dist/server.js
    networks: 
      - app-network

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx/config/conf.d/prod:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email parker.c.schmitt@gmail.com --agree-tos --no-eff-email --force-renewal -d speakeasy.cards  -d www.speakeasy.cards

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/speakeasy/views/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/speakeasy/dhparam/
      o: bind
networks:
  app-network:
    driver: bridge